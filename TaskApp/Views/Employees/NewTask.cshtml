@model TaskApp.Models.Job

@{
    ViewBag.Title = "NewTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Task</h2><br />

@using (Html.BeginForm("AddTask", "Employees"))
{
    <div class="form-group">
        @Html.LabelFor(e => e.Name, "Name of task")
        @Html.TextBoxFor(e => e.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Name)
    </div><br />
    <div class="form-group">
        @Html.LabelFor(e => e.Description, "Description")
        @Html.TextBoxFor(e => e.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Description)
    </div><br />
    <div class="form-group">
        @Html.LabelFor(e => e.NumberOfHours, "Number of hours")
        @Html.TextBoxFor(e => e.NumberOfHours, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.NumberOfHours)
    </div><br />
    <div class="form-group">
        @Html.LabelFor(e => e.Project)
        @Html.TextBoxFor(e => e.Project, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Project)
    </div><br />
    if (TempData["returned"] != null && TempData["returned"].Equals("not"))
    {
        <p style="color: red;font-size:14px">This project does not exist.</p>
    }

    <button type="submit" class="btn btn-primary">Save</button>

}


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

    </script>
}